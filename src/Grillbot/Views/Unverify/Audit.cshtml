@model Grillbot.Models.Unverify.UnverifyAuditViewModel;

@{
    ViewData["Title"] = "Unverify - Audit log";

    string getLeftBorderClass(UnverifyLogOperation operation)
    {
        switch (operation)
        {
            case UnverifyLogOperation.Autoremove:
            case UnverifyLogOperation.Remove:
                return "success";
            case UnverifyLogOperation.Selfunverify:
                return "primary";
            case UnverifyLogOperation.Unverify:
                return "danger";
            case UnverifyLogOperation.Update:
                return "info";
            case UnverifyLogOperation.Recover:
                return "warning";
            default:
                return "white";
        }
    }

    if (Model.PaginationInfo != null)
    {
        Model.PaginationInfo.WithCounts = true;
    }
}

<div class="container">
    <div class="card bg-dark">
        <div class="card-header">
            <h3 class="card-title font-weight-light mb-0 pb-0">Unverify log</h3>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger mt-3">
                    @Model.ErrorMessage
                </div>
            }
        </div>

        <form class="card-header" method="get">
            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label for="Request.Operation">Operace</label>
                    <select class="form-control" asp-for="FormData.Operation" asp-items="Html.GetEnumSelectList<Grillbot.Database.Enums.UnverifyLogOperation>()">
                        <option value="">Nezáleží</option>
                    </select>
                </div>

                <div class="col-md-4 mb-3">
                    <label for="Request.FromUserQuery">Volající</label>
                    <input class="form-control" asp-for="FormData.FromUserQuery" />
                </div>

                <div class="col-md-4 mb-3">
                    <label for="Request.DateTimeFrom">Datum a čas od</label>
                    <input type="datetime-local" class="form-control" asp-for="FormData.DateTimeFrom">
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label for="FormData.GuildID">Server</label>
                    <select class="form-control" asp-for="FormData.GuildID">
                        @foreach (var guild in Model.Guilds)
                        {
                            <option value="@guild.Id">@guild.Name</option>
                        }
                    </select>
                </div>

                <div class="col-md-4 mb-3">
                    <label for="FormData.ToUserQuery">Cílový uživatel</label>
                    <input class="form-control" asp-for="FormData.ToUserQuery" />
                </div>

                <div class="col-md-4 mb-3">
                    <label for="Request.DateTimeTo">Datum a čas do</label>
                    <input type="datetime-local" class="form-control" asp-for="FormData.DateTimeTo">
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-3 d-flex justify-content-between align-items-center">
                    <div>
                        <input type="radio" asp-for="FormData.OrderAsc" value="true" id="ASC_ORDER" />
                        <label for="ASC_ORDER" class="mb-0">Vzestupně</label>
                    </div>

                    <div>
                        <input type="radio" asp-for="FormData.OrderAsc" value="false" id="DESC_ORDER" />
                        <label for="DESC_ORDER" class="mb-0">Sestupně</label>
                    </div>
                </div>

                <div class="col-md-7"></div>

                <div class="col-md-2 d-flex justify-content-between align-items-end">
                    <button class="btn btn-danger" type="button" onclick="clearFilter(false)">Vyčistit</button>
                    <button type="submit" class="btn btn-success">Potvrdit</button>
                </div>
            </div>
        </form>

        <div class="card-body">
            @foreach (var item in Model.LogItems)
            {
                <div class="card bg-dark mb-3 only-border-left border-@getLeftBorderClass(item.Operation) two-px-border">
                    <div class="card-header">
                        #@item.ID - @item.Operation
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="row">
                                    <div class="col-4 font-weight-bold">Zapsáno:</div>
                                    <div class="col">@item.DateTime.ToLocaleDatetime()</div>
                                </div>

                                @if (item.Operation == UnverifyLogOperation.Unverify || item.Operation == UnverifyLogOperation.Selfunverify || item.Operation == UnverifyLogOperation.Update)
                                {
                                    if (item.Operation == UnverifyLogOperation.Update)
                                    {
                                        <div class="row">
                                            <div class="col-4 font-weight-bold">Začátek:</div>
                                            <div class="col">@item.UpdateData.StartDateTime.ToLocaleDatetime()</div>
                                        </div>

                                        <div class="row">
                                            <div class="col-4 font-weight-bold">Konec:</div>
                                            <div class="col">@item.UpdateData.EndDateTime.ToLocaleDatetime()</div>
                                        </div>

                                        <div class="row">
                                            <div class="col-4 font-weight-bold">Doba:</div>
                                            <div class="col">@((item.UpdateData.EndDateTime - item.UpdateData.StartDateTime).ToFullCzechTimeString())</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">
                                            <div class="col-4 font-weight-bold">Začátek:</div>
                                            <div class="col">@item.Profile.StartDateTime.ToLocaleDatetime()</div>
                                        </div>

                                        <div class="row">
                                            <div class="col-4 font-weight-bold">Konec:</div>
                                            <div class="col">@item.Profile.EndDateTime.ToLocaleDatetime()</div>
                                        </div>

                                        <div class="row">
                                            <div class="col-4 font-weight-bold">Doba:</div>
                                            <div class="col">@((item.Profile.EndDateTime - item.Profile.StartDateTime).ToFullCzechTimeString())</div>
                                        </div>
                                    }
                                }
                            </div>

                            <div class="col-md-7">
                                <div class="row">
                                    <div class="col-4 font-weight-bold">Od uživatele:</div>
                                    <div class="col">@item.FromUser.GetFullName()</div>
                                </div>

                                <div class="row">
                                    <div class="col-4 font-weight-bold">Uživateli:</div>
                                    <div class="col">@item.ToUser.GetFullName()</div>
                                </div>
                            </div>
                        </div>

                        @if (item.Operation == UnverifyLogOperation.Unverify)
                        {
                            <div class="row mt-2">
                                <div class="col-12 font-weight-bold">Důvod:</div>
                                <div class="col">@item.Profile.Reason</div>
                            </div>
                        }

                        @if (item.Operation == UnverifyLogOperation.Autoremove || item.Operation == UnverifyLogOperation.Remove || item.Operation == UnverifyLogOperation.Unverify || item.Operation == UnverifyLogOperation.Selfunverify || item.Operation == UnverifyLogOperation.Recover)
                        {
                            @if (item.Operation == UnverifyLogOperation.Remove || item.Operation == UnverifyLogOperation.Autoremove || item.Operation == UnverifyLogOperation.Recover)
                            {
                                @if (item.RemoveData.ReturnedRoles.Count > 0)
                                {
                                    <h5 class="mt-2">Role</h5>
                                    <h6>Vrácené</h6>
                                    @foreach (var role in item.RemoveData.ReturnedRoles)
                                    {
                                        <span class="badge @(ColorHelper.IsDark(role.Color) ? "text-white" : "")" style="background-color: @role.Color.ToString()">
                                            @role.Name
                                        </span>
                                    }
                                }
                            }
                            else if ((item.Operation == UnverifyLogOperation.Selfunverify || item.Operation == UnverifyLogOperation.Unverify) && (item.Profile.RolesToKeep.Count > 0 || item.Profile.RolesToRemove.Count > 0))
                            {
                                <h5 class="mt-2">Role</h5>

                                @if (item.Profile.RolesToKeep.Count > 0)
                                {
                                    <h6>Ponechané</h6>
                                    @foreach (var role in item.Profile.RolesToKeep)
                                    {
                                        <span class="badge @(ColorHelper.IsDark(role.Color) ? "text-white" : "")" style="background-color: @role.Color.ToString()">
                                            @role.Name
                                        </span>
                                    }
                                }

                                if (item.Profile.RolesToRemove.Count > 0)
                                {
                                    <h6>Odebrané</h6>
                                    @foreach (var role in item.Profile.RolesToRemove)
                                    {
                                        <span class="badge @(ColorHelper.IsDark(role.Color) ? "text-white" : "")" style="background-color: @role.Color.ToString()">
                                            @role.Name
                                        </span>
                                    }
                                }
                            }

                            @if (item.Operation == UnverifyLogOperation.Remove || item.Operation == UnverifyLogOperation.Autoremove || item.Operation == UnverifyLogOperation.Recover)
                            {
                                @if (item.RemoveData.ReturnedChannels.Count > 0)
                                {
                                    <h5 class="mt-2">Kanály</h5>
                                    <h6>Vrácené</h6>
                                    @foreach (var channel in item.RemoveData.ReturnedChannels)
                                    {
                                        <span class="badge" style="background-color: black">
                                            #@channel.Name
                                        </span>
                                    }
                                }
                            }
                            else if ((item.Operation == UnverifyLogOperation.Selfunverify || item.Operation == UnverifyLogOperation.Unverify) && (item.Profile.ChannelsToKeep.Count > 0 || item.Profile.ChannelsToRemove.Count > 0))
                            {
                                <h5 class="mt-2">Kanály</h5>
                                @if (item.Profile.ChannelsToKeep.Count > 0)
                                {
                                    <h6>Ponechané</h6>
                                    @foreach (var channel in item.Profile.ChannelsToKeep)
                                    {
                                        <span class="badge" style="background-color: black">
                                            #@channel.Channel.Name
                                        </span>
                                    }
                                }

                                if (item.Profile.ChannelsToRemove.Count > 0)
                                {
                                    <h6>Odebrané</h6>
                                    @foreach (var channel in item.Profile.ChannelsToRemove)
                                    {
                                        <span class="badge" style="background-color: black">
                                            #@channel.Channel.Name
                                        </span>
                                    }
                                }
                            }
                        }
                    </div>

                    @if (item.Operation == UnverifyLogOperation.Unverify || item.Operation == UnverifyLogOperation.Selfunverify)
                    {
                        <div class="card-footer d-flex justify-content-end align-items-end">
                            <a class="btn btn-success" asp-action="Recover" asp-route-id="@item.ID">Obnovit</a>
                        </div>
                    }
                </div>
            }

            <div class="d-flex justify-content-center">
                <partial name="PaginationPartialView" model="Model.PaginationInfo" />
            </div>
        </div>
    </div>
</div>

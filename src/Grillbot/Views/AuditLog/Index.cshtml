@model Grillbot.Models.Audit.AuditViewModel;

@{
    ViewData["Title"] = "Logování provozu";

    if (Model.PaginationInfo != null)
    {
        Model.PaginationInfo.PaginationKey = "Filter.Page";
        Model.PaginationInfo.WithCounts = true;
    }
}

<div class="container">
    <div class="card bg-dark">
        <div class="card-header">
            <h3 class="card-title font-weight-light mb-0 pb-0">Logování provozu</h3>
        </div>

        <form method="get" class="card-header">
            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label for="Filter.GuildID">Server</label>
                    <select class="form-control" asp-for="Filter.GuildId">
                        @foreach (var guild in Model.Guilds)
                        {
                            <option value="@guild.Id">@guild.Name</option>
                        }
                    </select>
                </div>

                <div class="col-md-4 mb-0">
                    <label for="Filter.UserQuery">Uživatelské jméno</label>
                    <input class="form-control" asp-for="Filter.UserQuery" />
                </div>

                <div class="col-md-4 mb-3">
                    <label for="Request.DateTimeFrom">Datum a čas od</label>
                    <input type="datetime-local" class="form-control" asp-for="Filter.From">
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4 mb-3">
                    <label for="Request.Operation">Typ</label>
                    <select class="form-control" name="Filter.Types">
                        <option value="">Nezáleží</option>

                        <optgroup label="Kombinace typů">
                            @foreach (var item in ExtendedAuditLogTypes.Instance.Types.OrderBy(o => o.Value.Item1))
                            {
                                if (item.Key == Model.Filter.Types)
                                {
                                    <option title="@item.Value.Item2" value="@item.Key" selected>@item.Value.Item1</option>
                                }
                                else
                                {
                                    <option title="@item.Value.Item2" value="@item.Key">@item.Value.Item1</option>
                                }
                            }
                        </optgroup>

                        @foreach (var group in Html.GetEnumSelectList<AuditLogType>().GroupBy(o => o.Group).OrderBy(o => string.IsNullOrEmpty(o?.Key?.Name) ? new string('Z', 555) : o.Key.Name))
                        {
                            <optgroup label="@(string.IsNullOrEmpty(group?.Key?.Name) ? "Ostatní typy" : group.Key.Name)">
                                @foreach (var item in group.OrderBy(o => o.Text))
                                {
                                    @if (Model.Filter.Types == item.Value)
                                    {
                                        <option value="@item.Value" selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                            </optgroup>
                        }
                    </select>
                </div>

                <div class="col-md-4">
                    <label for="Filter.ChannelsQuery">Kanál</label>
                    <input type="text" class="form-control" asp-for="Filter.ChannelsQuery" />
                </div>

                <div class="col-md-4 mb-3">
                    <label for="Request.DateTimeTo">Datum a čas do</label>
                    <input type="datetime-local" class="form-control" asp-for="Filter.To">
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-12">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="ignorebots" asp-for="Filter.IgnoreBots">
                        <label class="custom-control-label" for="ignorebots">Vynechat operace provedené boty</label>
                    </div>

                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="sortdesc" asp-for="Filter.SortDesc">
                        <label class="custom-control-label" for="sortdesc">Sestupně</label>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-10 mt-3"></div>

                <div class="col-md-2 d-flex justify-content-between align-items-end">
                    <button class="btn btn-danger" type="button" onclick="clearFilter(false)">Vyčistit</button>
                    <button type="submit" class="btn btn-success">Potvrdit</button>
                </div>
            </div>
        </form>

        <div class="card-body">
            @if (Model.Items.Count == 0)
            {
                <div class="alert alert-dark">
                    Žádný záznam nebyl nalezen. Zkuste upravit filtry a provést vyhledávání znovu.
                </div>
            }

            @foreach (var item in Model.Items)
            {
                <div class="card bg-dark mb-3">
                    <div class="card-header">
                        #@item.Id - @item.Type.GetDisplayName()
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="row">
                                    <div class="col-4 font-weight-bold">Zapsáno:</div>
                                    <div class="col">@item.CreatedAt.ToLocaleDatetime()</div>
                                </div>

                                @if(item.Channel != null)
                                {
                                    <div class="row">
                                        <div class="col-4 font-weight-bold">Kanál:</div>
                                        <div class="col">#@item.Channel.Name</div>
                                    </div>
                                }
                            </div>

                            @if (item.User != null)
                            {
                                <div class="col-md-7">
                                    <div class="row">
                                        <div class="col-4 font-weight-bold">Provedl:</div>
                                        <div class="col">@item.User.User.GetFullName().Replace("Unknown user", "Neznámý uživatel")</div>
                                    </div>
                                </div>
                            }
                        </div>

                        @switch (item.Type)
                        {
                            case AuditLogType.Command:
                                <partial name="~/Views/AuditLog/LogViews/CommandPartialView.cshtml" model="item.CommandAuditData" />
                                break;
                            case AuditLogType.UserLeft:
                                <partial name="~/Views/AuditLog/LogViews/UserLeftPartialView.cshtml" model="item.UserLeftAuditData" />
                                break;
                            case AuditLogType.UserJoined:
                                <partial name="~/Views/AuditLog/LogViews/UserJoinedPartialView.cshtml" model="item.UserJoinedAuditData" />
                                break;
                            case AuditLogType.MessageEdited:
                                <partial name="~/Views/AuditLog/LogViews/MessageEditedPartialView.cshtml" model="item.MessageEditedAuditData" />
                                break;
                            case AuditLogType.MessageDeleted:
                                <partial name="~/Views/AuditLog/LogViews/MessageDeletedPartialView.cshtml" model="item.MessageDeletedAuditData" />
                                break;
                            case AuditLogType.BotAdded:
                                <partial name="~/Views/AuditLog/LogViews/BotAddPartialView.cshtml" model="item.BotAdded" />
                                break;
                            case AuditLogType.ChannelCreated:
                            case AuditLogType.ChannelDeleted:
                                <partial name="~/Views/AuditLog/LogViews/ChannelInfoPartialView.cshtml" model="item.ChannelInfo" />
                                break;
                            case AuditLogType.GuildUpdated:
                                <partial name="~/Views/AuditLog/LogViews/GuildUpdatedPartialView.cshtml" model="item.GuildUpdated" />
                                break;
                            case AuditLogType.ChannelUpdated:
                                <partial name="~/Views/AuditLog/LogViews/ChannelUpdatedPartialView.cshtml" model="item.ChannelUpdated" />
                                break;
                            case AuditLogType.EmojiCreated:
                            case AuditLogType.EmojiDeleted:
                                <partial name="~/Views/AuditLog/LogViews/EmoteInfoPartialView.cshtml" model="item.EmoteInfo" />
                                break;
                            case AuditLogType.EmojiUpdated:
                                <partial name="~/Views/AuditLog/LogViews/EmoteUpdatedPartialView.cshtml" model="item.EmoteUpdated" />
                                break;
                            case AuditLogType.OverwriteCreated:
                            case AuditLogType.OverwriteDeleted:
                                <partial name="~/Views/AuditLog/LogViews/OverwriteInfoPartialView.cshtml" model="item.OverwriteInfo" />
                                break;
                            case AuditLogType.OverwriteUpdated:
                                <partial name="~/Views/AuditLog/LogViews/OverwriteUpdatedPartialView.cshtml" model="item.OverwriteUpdated" />
                                break;
                            case AuditLogType.Prune:
                                <partial name="~/Views/AuditLog/LogViews/PruneMembersPartialView.cshtml" model="item.PruneMembers" />
                                break;
                            case AuditLogType.Unban:
                                <partial name="~/Views/AuditLog/LogViews/UnbanPartialView.cshtml" model="item.Unban" />
                                break;
                            case AuditLogType.MemberUpdated:
                            case AuditLogType.MemberRoleUpdated:
                                <partial name="~/Views/AuditLog/LogViews/MemberUpdatedPartialView.cshtml" model="item.MemberUpdated" />
                                break;
                            case AuditLogType.RoleCreated:
                            case AuditLogType.RoleDeleted:
                                <partial name="~/Views/AuditLog/LogViews/RolePartialView.cshtml" model="item.Role" />
                                break;
                            case AuditLogType.RoleUpdated:
                                <partial name="~/Views/AuditLog/LogViews/RoleUpdatedPartialView.cshtml" model="item.RoleUpdated" />
                                break;
                            case AuditLogType.WebhookCreated:
                            case AuditLogType.WebhookDeleted:
                                <partial name="~/Views/AuditLog/LogViews/WebhookPartialView.cshtml" model="item.Webhook" />
                                break;
                            case AuditLogType.WebhookUpdated:
                                <partial name="~/Views/AuditLog/LogViews/WebhookUpdatedPartialView.cshtml" model="item.WebhookUpdated" />
                                break;
                            case AuditLogType.MessagePinned:
                            case AuditLogType.MessageUnpinned:
                                <partial name="~/Views/AuditLog/LogViews/PinInfoPartialView.cshtml" model="item.PinInfo" />
                                break;
                        }

                        @if (item.AttachmentNames.Count > 0)
                        {
                            <h5 class="mt-2">Přílohy</h5>
                            <div class="row">
                                <div class="col-md-12">
                                    <ul>
                                        @foreach (var attachment in item.AttachmentNames)
                                        {
                                            <li>
                                                <a class="text-white" asp-controller="FileManager" asp-action="Download" target="_blank" asp-route-filename="@attachment" asp-route-directory="AuditLogs">
                                                    <u>@attachment</u>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="card-footer d-flex justify-content-end align-items-end">
                        <a class="btn btn-danger" asp-action="DeleteRecord" asp-route-id="@item.Id">Smazat</a>
                    </div>
                </div>
            }

            <div class="d-flex justify-content-center">
                <partial name="PaginationPartialView" model="Model.PaginationInfo" />
            </div>
        </div>
    </div>
</div>